swagger: '2.0'
info:
  description: Weather requests api
  version: 1.0.0 #API version
  title: Weather requests # API title
  license: #Swagger license info
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost
schemes:
  - http
tags:
  - name: Weather
paths:
  '/getDailyWeatherInfo':
    get:
      tags:
        - Weather
      summary: get daily weather info by city, from startDate to endDate
      description: Returns daily weather info (min temp, max temp, avg temp)
      operationId: getDailyWeatherInfo
      produces:
        - application/json
      parameters:
        - name: city
          in: query
          description: name of city from which you want to get weather info
          required: true
          type: string
        - name: startDate
          in: query
          description: date from which you want to get weather info
          required: true
          type: string
        - name: endDate
          in: query
          description: date to with you want to get weather info
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WeatherDailyData' #Response object details
        '400':
          description: Invalid parameters
        '404':
          description: Weather info not found

  '/getSeasonWeatherInfo':
    get:
      tags:
        - Weather
      summary: get season weather info by city, from startDate to endDate
      description: Returns season weather info (min temp, max temp, avg temp)
      operationId: getSeasonWeatherInfo
      produces:
        - application/json
      parameters:
        - name: city
          in: query
          description: name of city from which you want to get weather info
          required: true
          type: string
        - name: startDate
          in: query
          description: date from which you want to get weather info
          required: true
          type: string
        - name: endDate
          in: query
          description: date to with you want to get weather info
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WeatherSeasonData' #Response object details
        '400':
          description: Invalid parameters
        '404':
          description: Weather info not found
  '/news/all':
    get:
      tags:
        - News
      summary: get all news by q
      description: returns news by special word
      operationId: getNewsData
      produces:
        - application/json
      parameters:
        - name: q
          in: query
          description: Keywords or phrases to search for in the article title and body
          required: true
          type: string
        - name: page
          in: query
          description: Use this to page through the results
          required: true
          type: integer
        - name: pageSize
          in: query
          description: The number of results to return per page
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NewsData' #Response object details
        '400': #Unsuccessful response code
          description: Invalid request #Unsuccessful response description
        '404': #Unsuccessful response code
          description: Address not found #Unsuccessful response description
  '/carbonFootprint':
    get:
      tags:
        - CarbonFootprint
      summary: get carbonfootrpint information by activity name
      operationId: getCarbonFootrpintByActivityName
      produces:
        - application/json
      parameters:
        - name: activityId
          in: query
          description: activity name
          required: true
          type: string
        - name: year
          in: query
          description: year of carbonfootrpint
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WeatherSeasonData' #Response object details
        '400':
          description: Invalid parameters
        '404':
          description: Weather info not found
definitions:
  WeatherDailyData:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: 'TemperatureDailyInfo'
        description: list of temp daily infos
  TemperatureDailyInfo:
    type: object
    properties:
      date:
        type: string
        description: date of temp
      tavg:
        type: string
        description: avg temp in this date
      tmin:
        type: string
        description: min temp in this date
      tmax:
        type: string
        description: max temp in this date
  WeatherRequest:
    type: object
    properties:
      city:
        type: string
        default: Moscow
      startDate:
        type: string
        default: 2013-01-01
      endDate:
        type: string
        default: 2021-01-01
  TemperatureInfoBySeason:
    type: object
    properties:
      season:
        type: string
      year:
        type: string
      maxTemp:
        type: string
      minTemp:
        type: string
      avgTemp:
        type: string
  WeatherSeasonData:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: 'TemperatureInfoBySeason'
  NewsData:
    type: object
    properties:
      totalResults:
        type: integer
        description: The total number of results available for your request
      articles:
        type: array
        items:
          $ref: 'Article'
        description: articles info
  Article:
    type: object
    properties:
      author:
        type: string
        description: article author
      title:
        type: string
        description: article title
      description:
        type: string
        description: article description
      url:
        type: string
        description: article url
      urlToImage:
        type: string
        description: article url to image
      publishedAt:
        type: string
        description: article published date
      content:
        type: string
        description: article content
      source:
        type: object
        $ref: 'Source'
  Source:
    type: object
    properties:
      id:
        type: string
        description: article source id
      name:
        type: string
        description: article source name
  NewsRequest:
    type: object
    properties:
      q:
        type: string
      page:
        type: integer
      pageSize:
        type: integer
  EmissionsData:
    type: object
    properties:
      co2e:
        type: number
        description: Emission factor carbon dioxide equivalent.
      co2e_unit:
        type: string
        description: The unit in which the co2e field is expressed.
      co2e_calculation_method:
        type: string
        description: Which calculation methodology that was used for the calculation. Is always ar4, ar5 or ar6
      co2e_calculation_origin:
        type: string
        description: Whether or not the data source or Climatiq made the calculation. Is always source or climatiq.
      emission_factor:
        $ref: '#/definitions/EmissionFactor'
        description: The emission factor that was used for the calculation.
      constituent_gases:
        $ref: '#/definitions/ConstituentGases'
        description: Indicates which constituent gases the emission factor is composed of.
      audit_trail:
        type: string
        description: Indicates whether Audit trail was enabled for this request. Is one of enabled, disabled or selector.
      activity_data:
        $ref: '#/definitions/ActivityData'
        description: Indicates the parameters which were multiplied by the factor to estimate emissions.
  EmissionFactor:
      type: object
      properties:
        name:
          type: string
          description: Emission factor name.
        id:
          type: string
          description: Unique ID for this emission factor.
        activity_id:
          type: string
          description: ID for the activity the emission factor applies to. Multiple factors can share the same activity_id, e.g. if they're from different sources or regions.
        access_type:
          type: string
          description: Data access type - private or public. Public factors are available to all, while private factors are only accessible to you.
        source:
          type: string
          description: Emission factor publisher.
        source_dataset:
          type: string
          description: Dataset published by the source.
        year:
          type: number
          description: Most relevant year for the emission factor according to the source.
        region:
          type: string
          description: Geographic region the emission factor applies to.
        category:
          type: string
          description: Emission factor category.
        source_lca_activity:
          type: string
          description: Associated Life Cycle Assessment (LCA) activity.
        data_quality_flags:
          type: array
          description: List of data quality flags for this emission factor. An empty list means no detected data quality issues.
          items:
            type: string
  ConstituentGases:
    type: object
    properties:
      co2e_total:
        type: number
        description: The total amount of GHG emitted per unit of activity expressed as kgCO2e, as reported by the source. It is null for Climatiq-performed calculations.
      co2e_other:
        type: number
        description: The total amount of GHG emitted that are not CO2, CH4 or N20 - expressed in kgCO2e emitted per unit of activity, as reported by the source.
      co2:
        type: number
        description: The amount of carbon dioxide (CO2) emitted per unit of activity expressed as kgCO2, as reported by the source.
      ch4:
        type: number
        description: The amount of methane (CH4) emitted per unit of activity expressed as kgCH4, as reported by the source.
      n2o:
        type: number
        description: The amount of nitrous oxide (N2O) emitted per unit of activity expressed as kgN2O, as reported by the source.
  ActivityData:
    type: object
    properties:
      activity_value:
        type: number
      activity_unit:
        type: string

